{"version":3,"sources":["components/card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardcomponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filtereRobots","filter","robot","toLowerCase","includes","lenght","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAgBeA,EAdF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GAExB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAMC,IAAI,SAASC,IAAG,+BAA4BH,EAA5B,cACtB,gCACA,6BAAKF,IACL,4BAAIC,WCYDK,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OACA,cAAC,EAAD,CAEAT,GAAMK,EAAOI,GAAGT,GAChBF,KAAMO,EAAOI,GAAGX,KAChBC,MAAQM,EAAOI,GAAGV,OAHbU,MAOT,OAEI,8BACHH,KCFUI,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKX,UAAY,MAAjB,SACA,uBACAA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCIJI,EAVA,SAACC,GACZ,OACI,qBAAKC,MAAQ,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACCJ,EAAMK,YC8CAC,E,kDA1CX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GAEd,EAAKC,SAAS,CAACf,YAAYc,EAAME,OAAOC,SAfxC,EAAKC,MAAO,CACRxB,OAAQ,GACRM,YAAa,IAJR,E,qDAOb,WAAoB,IAAD,OAEfmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAACrB,OAAQ6B,S,oBAWzC,WACI,MAA8BC,KAAKN,MAA5BxB,EAAP,EAAOA,OAAQM,EAAf,EAAeA,YACTyB,EAAgB/B,EAAOgC,QAAO,SAAAC,GAChC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS7B,EAAY4B,kBAEzD,OAAiC,IAA7BJ,KAAKN,MAAMxB,OAAOoC,OACX,yCAGX,sBAAKxC,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWW,aAAeuB,KAAKX,iBAC/B,cAAC,EAAD,UACJ,cAAC,EAAD,CAAUnB,OAAS+B,a,GApCTM,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAMjDX,M","file":"static/js/main.ec48c668.chunk.js","sourcesContent":["import  React from 'react';\r\n\r\nconst Card = ({name, email, id} )=>{\r\n   \r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3  ma3 grow bw2 shadow-5'>\r\n            <img  alt='robots' src = {`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './card';\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardcomponent = robots.map((user, i)=>{\r\n        return  (\r\n        <Card \r\n        key={i}\r\n        id = {robots[i].id}\r\n        name={robots[i].name} \r\n        email ={robots[i].email}\r\n        />\r\n    );\r\n    })\r\n    return(\r\n\r\n        <div>\r\n    {cardcomponent}\r\n    </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react'\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return(\r\n        <div className = 'pa2'>\r\n        <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search' \r\n        placeholder='search robots'\r\n        onChange ={searchChange}\r\n        />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style ={{overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n        {props.children}\r\n        </div>\r\n\r\n    ); \r\n\r\n};\r\n\r\nexport default Scroll;","import  React,{Component} from 'react';\r\nimport CardList from './components/CardList';\r\nimport SearchBox from './components/SearchBox';\r\nimport Scroll from './components/Scroll';\r\n\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            robots: [],//robots,\r\n            searchfield: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        \r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response =>response.json())\r\n        .then(users =>this.setState({robots: users}));\r\n        \r\n    }\r\n\r\n    onSearchChange = (event)=> { \r\n        \r\n        this.setState({searchfield:event.target.value})\r\n    \r\n        \r\n\r\n    }\r\n    render(){\r\n        const {robots, searchfield} = this.state;\r\n        const filtereRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        if (this.state.robots.lenght === 0){\r\n            return <h1>Loading</h1>\r\n        } else{\r\n    return(\r\n        <div className='tc'>\r\n            <h1>RoboFriends</h1>\r\n            <SearchBox searchChange ={this.onSearchChange}/>\r\n            <Scroll>\r\n        <CardList robots ={filtereRobots}/>\r\n        </Scroll>\r\n        </div>\r\n    );\r\n}\r\n}\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App/>,  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}